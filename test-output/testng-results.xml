<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-30T10:31:15 IST" name="Suite" finished-at="2022-03-30T10:32:05 IST" duration-ms="49826">
    <groups>
    </groups>
    <test started-at="2022-03-30T10:31:15 IST" name="Test" finished-at="2022-03-30T10:32:05 IST" duration-ms="49826">
      <class name="testClasses.textClass1">
        <test-method is-config="true" signature="beforeclass(java.lang.String)[pri:0, instance:testClasses.textClass1@1283bb96]" started-at="2022-03-30T10:31:15 IST" name="beforeclass" finished-at="2022-03-30T10:31:38 IST" duration-ms="22374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testClasses.textClass1@1283bb96]" started-at="2022-03-30T10:31:38 IST" name="beforemethod" finished-at="2022-03-30T10:31:38 IST" duration-ms="264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="verifyloginpage()[pri:0, instance:testClasses.textClass1@1283bb96]" started-at="2022-03-30T10:31:38 IST" name="verifyloginpage" finished-at="2022-03-30T10:31:43 IST" duration-ms="4659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyloginpage -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testClasses.textClass1@1283bb96]" started-at="2022-03-30T10:31:43 IST" name="aftermethod" finished-at="2022-03-30T10:31:43 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyloginpage status=SUCCESS method=textClass1.verifyloginpage()[pri:0, instance:testClasses.textClass1@1283bb96] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testClasses.textClass1@1283bb96]" started-at="2022-03-30T10:31:43 IST" name="beforemethod" finished-at="2022-03-30T10:31:43 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="verifyhomepage()[pri:1, instance:testClasses.textClass1@1283bb96]" started-at="2022-03-30T10:31:43 IST" name="verifyhomepage" finished-at="2022-03-30T10:32:04 IST" duration-ms="21138" status="FAIL">
          <exception class="java.io.IOException">
            <message>
              <![CDATA[Your InputStream was neither an OLE2 stream, nor an OOXML stream or you haven't provide the poi-ooxml*.jar in the classpath/modulepath - FileMagic: OOXML, having providers: [org.apache.poi.hssf.usermodel.HSSFWorkbookFactory@81b5db0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.IOException: Your InputStream was neither an OLE2 stream, nor an OOXML stream or you haven't provide the poi-ooxml*.jar in the classpath/modulepath - FileMagic: OOXML, having providers: [org.apache.poi.hssf.usermodel.HSSFWorkbookFactory@81b5db0]
at org.apache.poi.ss.usermodel.WorkbookFactory.wp(WorkbookFactory.java:334)
at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:224)
at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:185)
at utilClasses.utilClass1.getMultipleDataFromXcel(utilClass1.java:50)
at pomClasses.Profilepage.getDataForAddress(Profilepage.java:66)
at testClasses.textClass1.verifyhomepage(textClass1.java:118)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.IOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyhomepage -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testClasses.textClass1@1283bb96]" started-at="2022-03-30T10:32:04 IST" name="aftermethod" finished-at="2022-03-30T10:32:04 IST" duration-ms="262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyhomepage status=FAILURE method=textClass1.verifyhomepage()[pri:1, instance:testClasses.textClass1@1283bb96] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:testClasses.textClass1@1283bb96]" started-at="2022-03-30T10:32:04 IST" name="afterclass" finished-at="2022-03-30T10:32:05 IST" duration-ms="975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
      </class> <!-- testClasses.textClass1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
